name: Development Environment Check

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  NODE_VERSION: '18'

jobs:
  # Development environment compatibility check
  dev-check:
    name: Development Environment Validation
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm run install:all

      - name: Validate package structure
        run: |
          echo "Checking package structure..."

          # Check required packages exist
          required_packages=("shared" "api" "orchestrator" "web" "infrastructure")
          for package in "${required_packages[@]}"; do
            if [ ! -d "packages/$package" ]; then
              echo "❌ Missing required package: $package"
              exit 1
            else
              echo "✅ Package found: $package"
            fi
          done

      - name: Validate development scripts
        run: |
          echo "Checking development scripts..."

          # Check if development scripts exist in package.json
          if npm run | grep -q "dev:web"; then
            echo "✅ Web development script found"
          else
            echo "❌ Missing dev:web script"
            exit 1
          fi

          if npm run | grep -q "dev:api"; then
            echo "✅ API development script found"
          else
            echo "❌ Missing dev:api script"
            exit 1
          fi

      - name: Check Docker development setup
        run: |
          echo "Checking Docker configuration..."

          if [ -f "docker-compose.yml" ]; then
            echo "✅ Docker Compose configuration found"
            
            # Validate compose file syntax
            if command -v docker-compose &> /dev/null; then
              docker-compose config --quiet && echo "✅ Docker Compose file is valid"
            fi
          else
            echo "⚠️ No Docker Compose file found - development might require manual setup"
          fi

      - name: Validate environment configuration
        run: |
          echo "Checking environment configuration..."

          # Check for environment templates
          if [ -f ".env.example" ] || [ -f ".env.template" ]; then
            echo "✅ Environment template found"
          else
            echo "⚠️ No environment template found"
          fi

          # Check for development-specific configs
          if [ -f "packages/shared/src/config" ] || [ -d "tests/config" ]; then
            echo "✅ Configuration directories found"
          else
            echo "⚠️ Configuration structure might be missing"
          fi

      - name: Test local build process
        run: |
          echo "Testing local build process..."

          # Test building each package
          npm run build 2>&1 | tee build.log

          if [ ${PIPESTATUS[0]} -eq 0 ]; then
            echo "✅ All packages built successfully"
          else
            echo "❌ Build failed - check build.log"
            cat build.log
            exit 1
          fi

      - name: Test development server setup
        run: |
          echo "Testing development server setup..."

          # Test if development servers can start (timeout after 30 seconds)
          timeout 30s npm run dev:services || echo "⚠️ Development services might not start properly"

          echo "✅ Development environment validation completed"

      - name: Generate development status report
        run: |
          echo "## Development Environment Status" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Package Structure**: All required packages present" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Build Process**: All packages build successfully" >> $GITHUB_STEP_SUMMARY
          echo "✅ **Development Scripts**: Core development scripts available" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Ready for Development" >> $GITHUB_STEP_SUMMARY
          echo "The project is ready for local development. Use:" >> $GITHUB_STEP_SUMMARY
          echo "- \`npm run dev:services\` to start backend services" >> $GITHUB_STEP_SUMMARY
          echo "- \`npm run dev:web\` to start the frontend" >> $GITHUB_STEP_SUMMARY
          echo "- \`npm run dev:api\` to start the API server" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Notes" >> $GITHUB_STEP_SUMMARY
          echo "- AWS infrastructure deployment is optional for development" >> $GITHUB_STEP_SUMMARY
          echo "- Use Docker Compose for local database and Redis" >> $GITHUB_STEP_SUMMARY
          echo "- Integration tests may be skipped in development environment" >> $GITHUB_STEP_SUMMARY
