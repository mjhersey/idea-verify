{
  "name": "ai-validation-platform",
  "version": "1.0.0",
  "description": "AI-Powered Business Idea Validation Platform",
  "private": true,
  "workspaces": [
    "packages/*",
    "packages/agents/*"
  ],
  "scripts": {
    "validate:accounts": "node tools/validate-user-accounts.js",
    "validate:credentials": "node tools/validate-credentials.js",
    "setup:dev": "node tools/setup-dev-environment.js",
    "mock:start": "node tools/mock-services.js start",
    "mock:stop": "node tools/mock-services.js stop",
    "mock:status": "node tools/mock-services.js status",
    "mock:validate": "node tools/mock-services.js validate",
    "mock:restart": "node tools/mock-services.js restart",
    "dev:offline": "npm run mock:start",
    "test:offline": "node tools/test-offline-mode.js",
    "test:root:integration": "vitest run --config vitest.integration.config.ts",
    "test:root:integration:watch": "vitest --config vitest.integration.config.ts",
    "test:integration:e2e": "vitest run tests/integration/e2e-test-suite.ts --config vitest.integration.config.ts",
    "test:integration:api": "vitest run tests/integration/api-integration.test.ts --config vitest.integration.config.ts",
    "test:integration:database": "vitest run tests/integration/database-integration.test.ts --config vitest.integration.config.ts",
    "test:integration:auth": "vitest run tests/integration/auth-flow.test.ts --config vitest.integration.config.ts",
    "test:integration:evaluation": "vitest run tests/integration/evaluation-pipeline.test.ts --config vitest.integration.config.ts",
    "test:integration:performance": "vitest run tests/integration/performance.test.ts --config vitest.integration.config.ts",
    "test:integration:full": "node tools/test-with-services.js",
    "validate:environment": "node scripts/validate-environment.js",
    "test": "npm run test --workspaces",
    "test:unit": "npm run test:unit --workspaces --if-present",
    "test:unit:watch": "npm run test:unit:watch --workspaces --if-present",
    "test:integration": "npm run test:integration --workspaces --if-present",
    "test:integration:watch": "npm run test:integration:watch --workspaces --if-present",
    "lint": "npm run lint --workspaces",
    "build": "npm run build --workspaces",
    "clean": "npm run clean --workspaces",
    "dev:web": "npm run dev --workspace=packages/web",
    "dev:api": "npm run dev --workspace=packages/api",
    "dev:orchestrator": "npm run dev --workspace=packages/orchestrator",
    "dev:services": "docker-compose up -d postgres redis localstack",
    "dev:mocks": "docker-compose up -d mock-openai mock-anthropic",
    "dev:all": "docker-compose up -d",
    "dev:down": "docker-compose down",
    "dev:logs": "docker-compose logs -f",
    "test:db": "node tools/test-database-connectivity.js",
    "test:env": "node tools/validate-environment-setup.js",
    "install:all": "npm install && npm install --workspaces",
    "prepare": "husky install",
    "format": "prettier --write .",
    "format:check": "prettier --check ."
  },
  "devDependencies": {
    "@commitlint/cli": "^18.4.0",
    "@commitlint/config-conventional": "^18.4.0",
    "husky": "^8.0.3",
    "lint-staged": "^15.2.0",
    "prettier": "^3.1.0",
    "vitest": "^3.2.4"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=9.0.0"
  },
  "lint-staged": {
    "*.{js,ts,vue}": [
      "eslint --fix",
      "prettier --write"
    ],
    "*.{json,md,yml,yaml}": [
      "prettier --write"
    ]
  },
  "dependencies": {
    "vite": "7.0.6"
  }
}
