version: '3.8'

services:
  # LocalStack for AWS services mocking
  localstack:
    container_name: ai-validation-localstack
    image: localstack/localstack:3.0
    ports:
      - "4566:4566"  # LocalStack Gateway
      - "4510-4559:4510-4559"  # External services port range
    environment:
      - SERVICES=s3,secretsmanager,iam,sts
      - DEBUG=1
      - DATA_DIR=/var/lib/localstack/data
      - DOCKER_HOST=unix:///var/run/docker.sock
      - HOST_TMP_FOLDER=${TMPDIR:-/tmp}/localstack
    volumes:
      - "${TMPDIR:-/tmp}/localstack:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./tools/localstack-init:/docker-entrypoint-initaws.d"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4566/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Mock OpenAI API
  mock-openai:
    container_name: ai-validation-mock-openai
    build:
      context: .
      dockerfile: packages/shared/src/mocks/openai/Dockerfile
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - NODE_ENV=development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/v1/models"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Mock Anthropic API  
  mock-anthropic:
    container_name: ai-validation-mock-anthropic
    build:
      context: .
      dockerfile: packages/shared/src/mocks/anthropic/Dockerfile
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - NODE_ENV=development
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3002/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # PostgreSQL Database
  postgres:
    container_name: ai-validation-postgres
    image: postgres:15-alpine
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=ai_validation_platform
      - POSTGRES_USER=dev_user
      - POSTGRES_PASSWORD=dev_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./tools/postgres-init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U dev_user -d ai_validation_platform"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

  # Redis Cache and Message Queue
  redis:
    container_name: ai-validation-redis
    image: redis:7-alpine
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

networks:
  default:
    name: ai-validation-network

volumes:
  localstack_data:
    driver: local
  postgres_data:
    driver: local
  redis_data:
    driver: local